{"version":3,"sources":["App.js","index.js"],"names":["App","emojiWeKnow","emojiArray","Object","keys","useState","meaning","setmeaning","className","id","placeholder","onChange","event","e","emoji","target","value","trim","currentMeaning","inputEventHandler","style","fontSize","textAlign","padding","cursor","width","map","item","onClick","marginLeft","rootElement","document","getElementById","createRoot","render"],"mappings":"iMAGe,SAASA,IACtB,IAAIC,EAAc,CAChB,eAAM,4BACN,eAAM,SACN,eAAM,cACN,eAAM,2BACN,eAAM,4BACN,eAAM,gCACN,eAAM,iBACN,eAAM,iBAEJC,EAAaC,OAAOC,KAAKH,GACzB,EAAwBI,mBAAS,IAArC,mBAAKC,EAAL,KAAcC,EAAd,KAeA,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIC,GAAG,UAAP,wBACA,uBACEC,YAAY,8CACZC,SAAU,SAACC,GAAD,OAlBhB,SAA2BC,GACzB,IAAIC,EAAQD,EAAEE,OAAOC,MACrBF,EAAQA,EAAMG,KAAK,KACnB,IAAIC,EAAiBjB,EAAYa,GAC7BI,IAAmBhB,IACrBgB,EAAiB,sCAEnBX,EAAWW,EACZ,CAU0BC,CAAkBP,EAA7B,EACVQ,MAAO,CACLC,SAAU,SACVC,UAAW,SACXC,QAAS,SACTC,OAAQ,UACRC,MAAO,SAGX,mBAAGhB,GAAG,UAAN,SAAiBH,IAChBJ,EAAWwB,KAAI,SAACC,GACf,OACE,sBAEEC,QAAS,WArBjBrB,EAAWN,EAqBmC0B,GAA7B,EACTP,MAAO,CACLS,WAAY,SACZR,SAAU,OACVG,OAAQ,WANZ,SASGG,GARIA,EAWV,MAGN,CCzDD,IAAMG,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAClC,EAAD,M","file":"static/js/main.15266fe1.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useState } from \"react\";\n\nexport default function App() {\n  var emojiWeKnow = {\n    \"ü•∞\": \" Smiling Face with Hearts\",\n    \"‚ù§Ô∏è\": \" Heart\",\n    \"üòç\": \" Heart Eyes\",\n    \"üòÜ\": \" Grinning Squinting Face\",\n    \"üòú\": \" Winking Face with Tongue\",\n    \"ü§ó\": \" Smiling Face with Open Hands\",\n    \"ü§î\": \" Thinking Face\",\n    \"ü•∫\": \"Pleading Face\"\n  };\n  var emojiArray = Object.keys(emojiWeKnow);\n  var [meaning, setmeaning] = useState(\"\");\n\n  function inputEventHandler(e) {\n    let emoji = e.target.value;\n    emoji = emoji.trim(\" \");\n    var currentMeaning = emojiWeKnow[emoji];\n    if (currentMeaning === emojiArray) {\n      currentMeaning = \"we do not have thi in our database\";\n    }\n    setmeaning(currentMeaning);\n  }\n\n  function emojoClickEventHandler(emoji) {\n    setmeaning(emojiWeKnow[emoji]);\n  }\n  return (\n    <div className=\"App\">\n      <h1 id=\"heading\">INSIDE OUT</h1>\n      <input\n        placeholder=\"put an emoji here to know the meaning of it\"\n        onChange={(event) => inputEventHandler(event)}\n        style={{\n          fontSize: \"1.2rem\",\n          textAlign: \"center\",\n          padding: \"0.5rem\",\n          cursor: \"pointer\",\n          width: \"80%\"\n        }}\n      />\n      <p id=\"meaning\">{meaning}</p>\n      {emojiArray.map((item) => {\n        return (\n          <span\n            key={item}\n            onClick={() => emojoClickEventHandler(item)}\n            style={{\n              marginLeft: \"0.7rem\",\n              fontSize: \"2rem\",\n              cursor: \"pointer\"\n            }}\n          >\n            {item}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}